/// Creates a new component and outputs his CSS.
/// @access public
/// @group core
/// @param {String} $name - The component name
/// @param {String} $selector - The CSS selector of the component
/// @param {Map} $declarations - A set of component property names and values like so `background: red` or `draggable: false`
@mixin new-component(
  $name,
  $selector,
  $declarations
  ) {
  @if no-error(
    validate-type($name, 'string', argument-type-error('$name', 'new-component()')),
    validate-type($selector, 'string', argument-type-error('$selector', 'new-component()')),
    validate-type($declarations, 'map', argument-type-error('$declarations', 'new-component()'))
    ) {


        
    // If the component already exists
    @if map-has-key(_get-component($name), 'selector') {
      // throw an error.
      @error 'component `#{$name}` can\'t be declared twice';
    }

    // Overrides the existing component and get the result.
    $component: _set-component($name, $selector, $declarations);

    // Makes the parameters accessible from the `this` function.
    @include new-scope(('_this': ('name': $name, 'selector': $selector, 'declarations': $declarations))) {
      #{$selector} {
        // Processes the scope content.
        @content;
      }
    }

  }
}