/// Adds a new component.
/// @access private
/// @group core
/// @param {String} $name - The component name
/// @param {String} $selector [''] - Component CSS selector
/// @param {Map} $declarations [(null:null)] - A set of component property names and values like so `background: red` or `draggable: false`
/// @return {Map} - The edited component
@function _set-component(
  $name, 
  $selector: '', 
  $declarations: (null: null)
  ) {
  @if no-error(
    validate-type($name, 'string', argument-type-error('$name', '_set-component()')),
    validate-type($selector, 'string', argument-type-error('$selector', '_set-component()')),
    validate-type($declarations, 'map', argument-type-error('$declarations', '_set-component()'))
    ) {

    // Initialises the new component map.
    $newComponent: ();

    @if ($selector != '') {
      $newComponent: map-merge($newComponent, (selector: $selector));
    }

    @if ($declarations != (null: null)) {
      $newComponent: map-merge($newComponent, (declarations: $declarations));
    }

    // Merges the new component with the existing one.
    $mergedComponent: map-merge(_get-component($name), $newComponent);

    // Replaces the overriden component to the list or adds it if it doesn't exist.
    $_components: map-merge($_components, ($name: $mergedComponent)) !global;

    @return $mergedComponent;

  }
}