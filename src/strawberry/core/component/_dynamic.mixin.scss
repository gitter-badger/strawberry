/// Outputs the private CSS of a component.
/// The output cannot be changed in the theme file.
/// @access public
/// @group core
@mixin dynamic {
  $componentName: this('name');

  $componentDeclarations: map-get(_get-component($componentName), 'declarations');

  // Gets the variant declarations.
  $componentVariants: _get-component-variants($componentName);

  @if $componentVariants == () {
    @include new-scope($componentDeclarations) {
       @content;
    }
  }
  @else {
    // Loops through the component variants.
    @each $variantName, $variant in $componentVariants {
      // Gets the current variant selector.
      $variantSelector: map-get($variant, 'selector');
  
      // Gets the current variant declarations.
      $variantDeclarations: map-get($variant, 'declarations');
       
      // Merges the default declarations with the variant declarations.
      $mergedDeclarations: map-merge($componentDeclarations, $variantDeclarations); 
      
      $usedDeclarations: $mergedDeclarations;
      $usedSelector: '&#{$variantSelector}';

      @if $variantName == 'default' {
        $usedDeclarations: $variantDeclarations;
        $usedSelector: $variantSelector;
      }

      // Creates a new scope containing the appropriate declarations.
      @include new-scope($usedDeclarations) {
        #{$usedSelector} {
          // Outputs the CSS for the current variant.
          @content;
        }
      }
    }
  }
}