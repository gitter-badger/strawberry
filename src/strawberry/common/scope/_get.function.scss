/// Returns a variable from the current scope.
/// @access public
/// @group common
/// @param {String} $variablePath - The path of the variable to get
/// @return {*} - The scope variable
@function get(
  $variablePath
  ) {
  $this: 'get()';
  @if no-error(
    validate-type($variablePath, 'string', argument-type-error('$variablePath', $this))
    ) {

    // If we are not in a scope or the scope contains no variable.
    @if $_scope-variables-stack == () {
      @return null;
    }
    @else {
      // Gets the variables of the current scope.
      $scopeVariables: first($_scope-variables-stack);
    
      // Returns the asked variable or null if it doesn't exist.
      @return map-deep-get($scopeVariables, str-split($variablePath, ':'));
    }

  }
}