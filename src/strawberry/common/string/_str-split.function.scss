/// Split a string into an list of substrings.
/// @access public
/// @group common
/// @param {String} $string - The string to split
/// @param {String} $delimiter [''] - The string that separate each substrings
/// @return {List} - The list of substrings
@function str-split(
  $string,
  $delimiter: ''
  ) {
  $this: 'str-split()';
  @if no-error(
    validate-type($string, 'string', argument-type-error('$string', $this)),
    validate($string != '', argument-value-error('$string', $this, '\'\'')),
    validate-type($delimiter, 'string', argument-type-error('$delimiter', $this))
    ) {

   
    // TODO(maximegelinas): Add comments.

    $result: ();
    $length: str-length($string);

    @if str-length($delimiter) == 0 {
      @for $i from 1 through $length {
        $result: append($result, str-slice($string, $i, $i));
      }
  
      @return $result;
    }

    $running: true;
    $remaining: $string;

    @while $running {
      $index: str-index($remaining, $delimiter);

      @if $index {
        $slice: str-slice($remaining, 1, $index - 1);
        $result: append($result, $slice);
        $remaining: str-slice($remaining, $index + str-length($delimiter));
      } @else {
        $running: false;
      }
    }

    @return append($result, $remaining);

  }
}